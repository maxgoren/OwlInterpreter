program 'bubblesort';
begin
    let c := 1;
    let d := 2;
    let ds := 0;
    let i := 1;
    let x[10];

    func swap(v: int, u: int) begin
        let t := 0;
           t := x[v];
        x[v] := x[u];
        x[u] := t;
        ds := 1;
    end

    func showArr(n: int) begin
        let k := 1;
        k := 1;
        while (k < n) begin
            print (x[k] + " ");
            k := k + 1;
        end
        print "\n";
    end

    func sortPass(m: int, n: int) begin
        c := m;
        d := c + 1;
        while (d < n) begin
            if (x[d] < x[c]) then
                swap(c, d);
            end;
            c := c + 1;
            d := c + 1;
        end
    end

    func sort(l: int) begin
        ds := 0; {* did swap flag, once sortPass completes without setting to 1, were done *}
        sortPass(1, l);  {* do bubble pass *}
        if (ds == 0) then
            return 0;
        else
            sort(l);
        end
    end

    {* main program starts here *}
    
    i := 1;
    while (i < 10) begin      
        x[i] := rand(100);
        i := i + 1;
    end
    
    print "Random numbers: ";
    showArr(10);
    sort(10);
    print "Sorted:";
    showArr(10);
end